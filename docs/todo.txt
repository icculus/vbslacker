TODO list:

- Make current BASIClib code use the boxcar system, where applicable.
- HOWTO on adding new modules to BASIClib.
- Testlib code for boxcar system.
- Documentation: mem_management.txt and on_events.txt
- Streamline makefiles. Most of it is just duplication.
- Make __registerOnEventHandler() figure stack locations from registers more,
   so OnEvents can be registered in functions that have void parameters.
- Hell, rewrite OnEvents.
- Find good way to generate dependencies.
- Examine the "!!!" comments in the source.
- RESUME (RESUME 0) returns to statement that threw error. Ugh!
- GOSUB/RETURN support.
- Implement BASIC arrays.
- DON'T FORGET TO WRITE TESTLIB CODE FOR ALL IMPORTANT FUNCTIONS!
- For greg: finish math functions.
- For greg: file i/o functions. NOT FILE SYSTEM FUNCTIONS LIKE MKDIR, ETC...
- For ryan: finish conversion, and time/date functions.
- For ryan: READ/DATA/RESTORE
- For someone: Environment functions (chdir, environ set...)
- For someone: File system stuff. (mkdir, kill, etc...)
- For someone: process functions: shell, end, sleep, etc...
- For someone: Non-file i/o functions. (input$, etc...)
- For someone: Array functions (lbound, redim, etc...)
- For someone: Low-level functions (peek, poke, inp, outp, varptr,
                 call absolute, wait...)
- For someone: Console stuff (print, window, cls, color, locate, etc...)
- For someone: Randomosity functions (RANDOMIZE and RND...)
- For the daring: Sounds (beep, sound, play)
- For the daring: stick, strig, and ON STRIG. Joystick API. Ugh. :)
- For the daring: screen procedure and various graphics primitives...
- Other miscelleanea: SWAP, TAB
- Design full, detailed timetable.
- Figure out a good name mangling scheme.
- Consider marketing strategy.
- Write the !@#$ing thing.
- ...and much, much more.


